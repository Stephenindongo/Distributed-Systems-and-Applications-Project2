#!/bin/bash

# Windhoek Transport System - Monitoring Setup Script
# This script starts the monitoring stack for the transport system

echo "üöÄ Starting Windhoek Transport System Monitoring Stack..."

# Check if Docker is running
if ! docker info > /dev/null 2>&1; then
    echo "‚ùå Docker is not running. Please start Docker first."
    exit 1
fi

# Create monitoring network if it doesn't exist
echo "üì° Creating monitoring network..."
docker network create monitoring 2>/dev/null || echo "Network already exists"

# Start monitoring services
echo "üîß Starting monitoring services..."
docker-compose -f monitoring/docker-compose.monitoring.yml up -d

# Wait for services to be ready
echo "‚è≥ Waiting for services to be ready..."
sleep 30

# Check service status
echo "üìä Checking service status..."
docker-compose -f monitoring/docker-compose.monitoring.yml ps

# Display access information
echo ""
echo "üéâ Monitoring stack is ready!"
echo ""
echo "üìä Access URLs:"
echo "  ‚Ä¢ Grafana: http://localhost:3000 (admin/admin123)"
echo "  ‚Ä¢ Prometheus: http://localhost:9090"
echo "  ‚Ä¢ Jaeger: http://localhost:16686"
echo "  ‚Ä¢ Kibana: http://localhost:5601"
echo "  ‚Ä¢ Elasticsearch: http://localhost:9200"
echo "  ‚Ä¢ cAdvisor: http://localhost:8080"
echo ""
echo "üìà Monitoring Features:"
echo "  ‚Ä¢ System metrics (CPU, Memory, Disk)"
echo "  ‚Ä¢ Application metrics (HTTP requests, response times)"
echo "  ‚Ä¢ Database metrics (connections, queries)"
echo "  ‚Ä¢ Kafka metrics (topics, consumers)"
echo "  ‚Ä¢ Container metrics (resource usage)"
echo "  ‚Ä¢ Distributed tracing"
echo "  ‚Ä¢ Centralized logging"
echo ""
echo "üîç Useful Commands:"
echo "  ‚Ä¢ View logs: docker-compose -f monitoring/docker-compose.monitoring.yml logs"
echo "  ‚Ä¢ Stop monitoring: docker-compose -f monitoring/docker-compose.monitoring.yml down"
echo "  ‚Ä¢ Restart services: docker-compose -f monitoring/docker-compose.monitoring.yml restart"
echo ""
echo "‚ú® Happy monitoring!"
